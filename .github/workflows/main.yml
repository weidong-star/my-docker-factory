# ===================================================================================
# GitHub Actions 工作流文件 (V3 - 修正了致命的YAML语法错误)
# ===================================================================================

# 工作流名称
name: Build Docker Offline Package for CentOS 7 (V3 - Syntax Fixed)

# 工作流的触发条件
# 修正之处： "on:" 后面需要换行和缩进
on:
  workflow_dispatch:

# 定义工作任务
jobs:
  build-package:
    # 指定运行环境
    runs-on: ubuntu-latest

    # 定义操作步骤
    steps:
      # 操作一：安装构建工具
      - name: 安装构建工具 (podman and yum-utils)
        run: |
          sudo apt-get update
          sudo apt-get install -y podman yum-utils

      # 操作二：在临时的 CentOS 7 容器内下载并打包
      - name: 在 CentOS 7 容器内下载并打包所有依赖
        run: |
          mkdir -p final-package
          podman run --rm \
            -v ./final-package:/output \
            docker.io/library/centos:7 \
            /bin/bash -c " \
              echo '--- Step A: 修正 yum 源 ---'; \
              sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/CentOS-Base.repo && \
              sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Base.repo && \
              \
              echo '--- Step B: 安装和添加软件源 ---'; \
              yum install -y epel-release yum-utils && \
              yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo && \
              \
              echo '--- Step C: 清理并创建缓存 ---'; \
              yum clean all && \
              yum makecache && \
              \
              echo '--- Step D: 自动下载所有依赖 ---'; \
              mkdir /rpm-packages && \
              yumdownloader --resolve --destdir=/rpm-packages \
                docker-ce \
                docker-ce-cli \
                containerd.io \
                docker-buildx-plugin \
                docker-compose-plugin && \
              \
              echo '--- Step E: 打包所有 .rpm 文件 ---'; \
              tar -czvf /output/DOCKER_CENTOS7_OFFLINE_PACK.tar.gz -C /rpm-packages . \
            "
      
      # 操作三：上传最终的成品文件
      - name: 上传最终的离线包
        uses: actions/upload-artifact@v4
        with:
          # 上传后的文件名
          name: docker-centos7-package
          # 要上传的文件的路径
          path: ./final-package/DOCKER_CENTOS7_OFFLINE_PACK.tar.gz
