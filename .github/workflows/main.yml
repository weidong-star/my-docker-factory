# ===================================================================================
# GitHub Actions 工作流文件 (V4 - 修正了跨平台包管理错误)
# ===================================================================================

name: Build Docker Offline Package for CentOS 7 (V4 - Package Fix)

on:
  workflow_dispatch:

jobs:
  build-package:
    runs-on: ubuntu-latest

    steps:
      # 操作一：在 Ubuntu 环境中，只安装 podman
      - name: 在 Ubuntu 环境中安装构建工具 (podman)
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      # 操作二：在临时的 CentOS 7 容器内完成所有下载和打包
      - name: 在 CentOS 7 容器内准备环境并下载所有依赖
        run: |
          mkdir -p final-package
          podman run --rm \
            -v ./final-package:/output \
            docker.io/library/centos:7 \
            /bin/bash -c " \
              echo '--- Step A: 修正 yum 源 ---'; \
              sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/CentOS-Base.repo && \
              sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Base.repo && \
              \
              echo '--- Step B: 在容器内部安装 epel-release 和 yum-utils ---'; \
              yum install -y epel-release yum-utils && \
              \
              echo '--- Step C: 添加 Docker 官方源 ---'; \
              yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo && \
              \
              echo '--- Step D: 清理并创建缓存 ---'; \
              yum clean all && \
              yum makecache && \
              \
              echo '--- Step E: 自动下载所有依赖 ---'; \
              mkdir /rpm-packages && \
              yumdownloader --resolve --destdir=/rpm-packages \
                docker-ce \
                docker-ce-cli \
                containerd.io \
                docker-buildx-plugin \
                docker-compose-plugin && \
              \
              echo '--- Step F: 打包所有 .rpm 文件 ---'; \
              tar -czvf /output/DOCKER_CENTOS7_OFFLINE_PACK.tar.gz -C /rpm-packages . \
            "
  
      # 操作三：上传最终的成品文件
      - name: 上传最终的离线包
        uses: actions/upload-artifact@v4
        with:
          name: docker-centos7-package
          path: ./final-package/DOCKER_CENTOS7_OFFLINE_PACK.tar.gz
